name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node_version: [12, 14, 15]
        architecture: [x64]
        include:
          - os: macos-latest
            node_version: 14
            architecture: x64
          - os: windows-latest
            node_version: 14
            architecture: x64
          - os: windows-2016
            node_version: 14
            architecture: x86
      fail-fast: false

    name: 'Build&Test: ${{ matrix.os }}(${{ matrix.architecture }}), node(${{ matrix.node_version }})'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set node version to ${{ matrix.node_version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node_version }}
          architecture: ${{ matrix.architecture }}

      - name: Versions
        run: yarn versions

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build vite
        run: yarn build-vite

      - name: Build plugin-vue
        run: yarn build-plugin-vue

      - name: Test serve
        run: yarn test-serve --runInBand
        env:
          NODE_OPTIONS: '--max_old_space_size=4096'

      - name: Test build
        run: yarn test-build --runInBand

  lint:
    runs-on: ubuntu-latest
    name: 'Lint: ubuntu-latest(x64), node(14)'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set node version to 14
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Prepare
        run: |
          yarn install --frozen-lockfile
          yarn build-vite
          yarn build-plugin-vue

      - name: Lint
        run: yarn lint
